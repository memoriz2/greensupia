# ========================================
# Greensupia Next.js - Nginx 설정 (conf.d용)
# 가비아 호스팅 서버용
# ========================================
#
# ⚠️  중요: 이 파일을 서버에 적용하기 전에 다음 설정을 추가해야 합니다!
#
# 1. 서버의 메인 nginx.conf 파일에 다음 설정 추가:
#    sudo nano /etc/nginx/nginx.conf
#    
#    http 블록 내에 추가:
#    client_max_body_size 50M;
#
# 2. 또는 이 파일을 /etc/nginx/conf.d/ 디렉토리에 복사 후
#    각 server 블록에 개별 설정 추가:
#    client_max_body_size 50M;
#
# 3. 설정 적용:
#    sudo nginx -t && sudo systemctl restart nginx
#
# ========================================

# 업스트림 설정 (Next.js 앱)
upstream nextjs_backend {
    server 127.0.0.1:3000;
    keepalive 32;
}

# HTTP 서버 블록 (도메인)
server {
    listen 80;
    listen [::]:80;
    server_name greensupia.com www.greensupia.com;
    
    # 클라이언트 요청 본문 크기 제한 (50MB)
    client_max_body_size 50M;
    
    # HTTP에서 HTTPS로 리다이렉트
    return 301 https://$server_name$request_uri;
}

# HTTP 서버 블록 (IP 접속 시 도메인으로 리다이렉트)
server {
    listen 80;
    listen [::]:80;
    server_name 121.78.130.212;
    
    # 클라이언트 요청 본문 크기 제한 (50MB)
    client_max_body_size 50M;
    
    # IP 접속 시 도메인으로 리다이렉트
    return 301 https://greensupia.com$request_uri;
}

# HTTPS 메인 서버 블록 (도메인)
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name greensupia.com www.greensupia.com;
    
    # 클라이언트 요청 본문 크기 제한 (50MB)
    client_max_body_size 50M;
    
    # SSL 인증서 설정
    ssl_certificate /etc/letsencrypt/live/greensupia.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/greensupia.com/privkey.pem;
    
    # SSL 보안 설정
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # 보안 헤더
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header Content-Security-Policy "default-src 'self'; frame-src 'self' https://www.youtube.com https://www.youtube-nocookie.com; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://maps.googleapis.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https: https://img.youtube.com https://i.ytimg.com; media-src 'self' https://*.youtube.com https://*.youtube-nocookie.com; connect-src 'self' https: https://www.youtube.com https://www.youtube-nocookie.com;" always;
    
    # 루트 디렉토리
    root /home/greensupia;
    index index.html;
    
    # 로그 설정
    access_log /var/log/nginx/greensupia_access.log main buffer=16k flush=5s;
    error_log /var/log/nginx/greensupia_error.log warn;
    
    # Next.js 정적 파일 처리
    location /_next/static/ {
        alias /home/greensupia/.next/static/;
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Content-Type-Options "nosniff";
        add_header Vary "Accept-Encoding";
        
        # HTTP/2 푸시 (중요한 리소스)
        http2_push_preload on;
        
        # MIME 타입 설정
        types {
            text/css css;
            application/javascript js;
            font/woff2 woff2;
            image/png png;
            image/jpeg jpg jpeg;
            image/webp webp;
            image/avif avif;
        }
    }
    
    # Next.js 이미지 최적화
    location /_next/image {
        proxy_pass http://nextjs_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # API 라우트
    location /api/ {
        proxy_pass http://nextjs_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # API 타임아웃 설정
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # CORS 헤더
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With" always;
        
        # OPTIONS 요청 처리
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
            add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With";
            add_header Access-Control-Max-Age 1728000;
            add_header Content-Type "text/plain; charset=utf-8";
            add_header Content-Length 0;
            return 204;
        }
    }
    
    # 헬스체크 엔드포인트
    location /health {
        proxy_pass http://nextjs_backend;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 헬스체크 캐싱 비활성화
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }
    
    # 메인 애플리케이션 (Next.js)
    location / {
        proxy_pass http://nextjs_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # 웹소켓 지원
        proxy_set_header Connection "upgrade";
        proxy_set_header Upgrade $http_upgrade;
        
        # 타임아웃 설정
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # 버퍼 설정
        proxy_buffering on;
        proxy_buffer_size 4k;
        proxy_buffers 8 4k;
        proxy_busy_buffers_size 8k;
    }
    
    # 보안 설정
    location ~ /\. {
        deny all;
    }
    
    location ~ /\.ht {
        deny all;
    }
    
    # 로봇 텍스트
    location /robots.txt {
        alias /home/greensupia/public/robots.txt;
        expires 1d;
    }
    
    # 사이트맵
    location /sitemap.xml {
        alias /home/greensupia/public/sitemap.xml;
        expires 1d;
    }
    
    # 파비콘
    location /favicon.ico {
        alias /home/greensupia/public/favicon.ico;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    # 에러 페이지
    error_page 404 /404.html;
    error_page 500 502 503 504 /50x.html;
    
    # 404 페이지 (Next.js 404 페이지 사용)
    location = /404.html {
        alias /home/greensupia/public/404.html;
        expires 1d;
        add_header Cache-Control "no-cache";
    }
    
    # 50x 에러 페이지
    location = /50x.html {
        root /usr/share/nginx/html;
        expires 1d;
        add_header Cache-Control "no-cache";
    }
}

# HTTPS 서버 블록 (IP 접속 시 도메인으로 리다이렉트)
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name 121.78.130.212;
    
    # 클라이언트 요청 본문 크기 제한 (50MB)
    client_max_body_size 50M;
    
    # SSL 인증서 설정 (IP용)
    ssl_certificate /etc/letsencrypt/live/greensupia.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/greensupia.com/privkey.pem;
    
    # SSL 보안 설정
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # IP 접속 시 도메인으로 리다이렉트
    return 301 https://greensupia.com$request_uri;
}
