generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model banner {
  id        Int      @id @default(autoincrement())
  title     String
  imageUrl  String   @db.Text
  linkUrl   String?
  sortOrder Int      @default(0)
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime
}

model bannernews {
  id        Int       @id @default(autoincrement())
  title     String
  content   String    @db.Text
  imageUrl  String?
  isActive  Boolean   @default(true)
  createdAt DateTime  @default(now())
  updatedAt DateTime
  endDate   DateTime?
  linkUrl   String?
  sortOrder Int       @default(0)
  startDate DateTime?
}

model greeting {
  id        Int      @id @default(autoincrement())
  title     String
  content   String   @db.LongText
  isActive  Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime
}

model history {
  id          Int      @id @default(autoincrement())
  year        String
  createdAt   DateTime @default(now())
  updatedAt   DateTime
  description String   @db.Text
  isActive    Boolean  @default(true)
  sortOrder   Int      @default(0)
}

model inquiry {
  id         Int       @id @default(autoincrement())
  title      String
  content    String    @db.LongText
  author     String
  email      String?   @db.Text
  isSecret   Boolean   @default(false)
  password   String?
  isAnswered Boolean   @default(false)
  answer     String?   @db.LongText
  answeredAt DateTime?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime

  @@index([isAnswered, createdAt], map: "Inquiry_isAnswered_createdAt_idx")
  @@index([isSecret, isAnswered], map: "Inquiry_isSecret_isAnswered_idx")
}

model notice {
  id               Int                @id @default(autoincrement())
  title            String
  content          String             @db.LongText
  author           String             @default("관리자")
  isPinned         Boolean            @default(false)
  viewCount        Int                @default(0)
  isActive         Boolean            @default(true)
  createdAt        DateTime           @default(now())
  updatedAt        DateTime
  noticeattachment noticeattachment[]
}

model noticeattachment {
  id            Int      @id @default(autoincrement())
  noticeId      Int
  fileName      String
  filePath      String
  fileSize      Int
  mimeType      String
  downloadCount Int      @default(0)
  createdAt     DateTime @default(now())
  notice        notice   @relation(fields: [noticeId], references: [id], onDelete: Cascade, map: "NoticeAttachment_noticeId_fkey")

  @@index([noticeId], map: "NoticeAttachment_noticeId_fkey")
}

model organizationchart {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime
  imageUrl  String   @db.Text
  isActive  Boolean  @default(true)
}

model video {
  id           Int      @id @default(autoincrement())
  title        String
  description  String?  @db.Text
  videoUrl     String   @db.Text
  thumbnailUrl String?
  duration     Int?
  sortOrder    Int      @default(0)
  isActive     Boolean  @default(true)
  createdAt    DateTime @default(now())
  updatedAt    DateTime
}

model todo {
  id          Int           @id @default(autoincrement())
  title       String
  description String?
  completed   Boolean       @default(false)
  priority    todo_priority @default(MEDIUM)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime
  dueDate     DateTime?
}

enum todo_priority {
  LOW
  MEDIUM
  HIGH
}
